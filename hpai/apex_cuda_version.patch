--- a/setup.py
+++ b/setup.py
@@ -1,4 +1,10 @@
 import torch
+
+# Monkey-patch the PyTorch CUDA version so that the cpp_extensions will compile correctly.
+# The lifetime of this patch is the durtion of the Apex intallation.
+# The current HPC image uses CUDA 11.4, but current PyTorch wheels are 11.3 or 11.5 only.
+torch.version.cuda="11.4"
+
 from torch.utils.cpp_extension import BuildExtension, CppExtension, CUDAExtension, CUDA_HOME
 from setuptools import setup, find_packages
 import subprocess
@@ -30,15 +36,18 @@ def check_cuda_torch_binary_vs_bare_metal(cuda_dir):
     print("\nCompiling cuda extensions with")
     print(raw_output + "from " + cuda_dir + "/bin\n")

-    if (bare_metal_major != torch_binary_major) or (bare_metal_minor != torch_binary_minor):
-        raise RuntimeError(
-            "Cuda extensions are being compiled with a version of Cuda that does "
-            "not match the version used to compile Pytorch binaries.  "
-            "Pytorch binaries were compiled with Cuda {}.\n".format(torch.version.cuda)
-            + "In some cases, a minor-version mismatch will not cause later errors:  "
-            "https://github.com/NVIDIA/apex/pull/323#discussion_r287021798.  "
-            "You can try commenting out this check (at your own risk)."
-        )
+# For the same reason as above, remove Apex's CUDA version check.  Currently, CUDA 11.4 is
+# compatible with the API for 11.3 or 11.5 as provided by the stable PyTorch wheel.
+#
+#    if (bare_metal_major != torch_binary_major) or (bare_metal_minor != torch_binary_minor):
+#        raise RuntimeError(
+#            "Cuda extensions are being compiled with a version of Cuda that does "
+#            "not match the version used to compile Pytorch binaries.  "
+#            "Pytorch binaries were compiled with Cuda {}.\n".format(torch.version.cuda)
+#            + "In some cases, a minor-version mismatch will not cause later errors:  "
+#            "https://github.com/NVIDIA/apex/pull/323#discussion_r287021798.  "
+#            "You can try commenting out this check (at your own risk)."
+#        )
