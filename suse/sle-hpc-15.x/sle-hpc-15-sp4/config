# SLE Setup

# SLE Version
# it can be generated, but better is to go through this file
# manual and set the right versions as some have dependencies like nvidia, cuda and nccl

# #source /etc/os-release
# #export SLE_DOTV=${VERSION_ID}
# #export SLE_MAJOR=${VERSION_ID%.*}
export SLE_DOTV=15.4
export SLE_MAJOR=${SLE_DOTV%%.*}
export SLE_MINOR=${SLE_DOTV##*.}


# we need the running kernel version to get the right -devel packages
# PAYG SLES and SLE HPC use kernel-azure by default
# BYOS has kernel-default by default, so pls. replace name below if you use BYOS images
export KERNEL_VERSION=$(rpm -q  --qf="%{VERSION}-%{RELEASE}" kernel-azure)
[[ $KERNEL_VERSION =~ "is not" ]] && KERNEL_VERSION=


# GNU compiler version
export GNU_COMPILER_VERSION=11

# SUSE uses lmod
export MODULE_FILES_DIRECTORY=/usr/share/lmod/modulefiles
export MODULE_DEPS_DIRECTORY=/usr/share/lmod/moduledeps

# local directories
export LOCALDIR=/usr/local
export LOCALBIN=${LOCALDIR}/bin

# azcopy
export AZVERSION="10.16.2"
RELEASE_TAG="release20221108"
#
export AZTARBALL="azcopy_linux_amd64_${AZVERSION}.tar.gz"
export AZCOPY_DOWNLOAD_URL="https://azcopyvnext.azureedge.net/${RELEASE_TAG}/${AZTARBALL}"


# HPC-X
# pls accept the EULA
export HPCX_VERSION="2.12"
export HPCX_DOWNLOAD_URL=https://content.mellanox.com/hpc/hpc-x/v${HPCX_VERSION}/hpcx-v${HPCX_VERSION}-gcc-inbox-suse${SLE_DOTV}-cuda11-gdrcopy2-nccl${HPCX_VERSION}-x86_64.tbz
export HPCX_CHKSUM="bc315d3b485d13c97cd174ef5c9cba5c2fa1fbc3e5175f96f1a406a6c0699bdb"
# URL need to be changed if you do not use the inbox drivers and want use MLNX_OFED
#export HPCX_DOWNLOAD_URL=https://content.mellanox.com/hpc/hpc-x/v${HPCX_VERSION}/hpcx-v${HPCX_VERSION}-gcc-MLNX_OFED_LINUX-5-suse${SLE_DOTV}-cuda11-gdrcopy2-nccl${HPCX_VERSION}-x86_64.tbz
#export HPCX_CHKSUM="295376818a596b39196ca3843f4b5fc9e0607e50b0a0f96b4b97907af5f45fcb"


# NVIDIA

## CUDA
## Nvidia provide certified packages for SLES, so we only need to add the repositories and install the packages
export CUDA_PUBKEY_URI=https://developer.download.nvidia.com/compute/cuda/repos/sles${SLE_MAJOR}/x86_64/D42D0685.pub
export CUDA_REPO_URI=https://developer.download.nvidia.com/compute/cuda/repos/sles${SLE_MAJOR}/x86_64/cuda-sles${SLE_MAJOR}.repo
# Version need to be with dot
export CUDA_VERSION="11.8"

## NVIDIA DRIVER
export NVIDIA_VERSION="525.85.12"

## NVIDIA CONTAINER
## see https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html
export NVIDIA_CONTAINER_REPO_URI=https://nvidia.github.io/libnvidia-container/sles15.3/libnvidia-container.repo

## NVIDIA DATACENTER MGR
export DCGM_VERSION="1:3.1.6"

# NCCL
# actual is v2.17.1-1 (march 2023)
# v2.16.2-1 does support CUDA 12, and drop Kepler (sm_35)
export NCCL_VERSION="2.15.1-1" # for cuda-11.8
export NCCL_DOWNLOAD_URL=https://github.com/NVIDIA/nccl/archive/refs/tags/v${NCCL_VERSION}.tar.gz

# IBDEV2NETDEV
export IBDEV2NETDEV_BINARY_SOURCE=https://raw.githubusercontent.com/Mellanox/container_scripts/master/ibdev2netdev

# AMD
export AOCL_VERSION="4.0"
export AOCL_DOWNLOAD_URL=https://azhpcstor.blob.core.windows.net/azhpc-images-store/aocl-linux-aocc-${AOCL_VERSION}.tar.gz
export AOCL_CHKSUM="c8000a66aaa2a257252cbb307732b4e66758b72b08f43b3723f4eb5404ba28c8"

# OpenMPI 4
export OMPI=openmpi4

# Intel oneAPI
# https://www.intel.com/content/www/us/en/develop/documentation/installation-guide-for-intel-oneapi-toolkits-linux/top/installation/install-using-package-managers/yum-dnf-zypper.html
export INTEL_PUBKEY_URI=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
export INTEL_REPO_URI=https://yum.repos.intel.com/oneapi
export INTELLIBS=/opt/intel/oneapi

## Intel MPI - to check whats available with: zypper se -s --repo oneAPI
# intel-oneapi-mpi-2021.1.1
# intel-oneapi-mpi-2021.2.0
# intel-oneapi-mpi-2021.3.0
# intel-oneapi-mpi-2021.3.1
# intel-oneapi-mpi-2021.4.0
# intel-oneapi-mpi-2021.5.0
# intel-oneapi-mpi-2021.5.1
# intel-oneapi-mpi-2021.6.0
# intel-oneapi-mpi-2021.7.0
# intel-oneapi-mpi-2021.7.1
# intel-oneapi-mpi-2021.8.0
# intel-oneapi-mpi-2021.9.0
export INTEL_ONE_MPI_VERSION="2021.9.0"
export IMPI_MAJOR=${INTEL_ONE_MPI_VERSION%.*.*}

## Intel MKL (Math Kernel Library) - to check whats available with: zypper se -s --repo oneAPI
# intel-oneapi-mkl-2021.1.1
# intel-oneapi-mkl-2021.2.0
# intel-oneapi-mkl-2021.3.0
# intel-oneapi-mkl-2021.4.0
# intel-oneapi-mkl-2022.0.1
# intel-oneapi-mkl-2022.0.2
# intel-oneapi-mkl-2022.1.0
# intel-oneapi-mkl-2022.2.0
# intel-oneapi-mkl-2023.0.0
# intel-oneapi-mkl-2023.1.0
export INTEL_ONE_MKL_VERSION="2023.1.0"
